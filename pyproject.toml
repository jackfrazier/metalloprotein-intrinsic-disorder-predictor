[tool.poetry]
name = "metalloprotein-intrinsically-disordered-predictor"
version = "0.1.0"
description = "Dual-track architecture for predicting functionally important conformations in intrinsically disordered metalloproteins"
authors = ["Jack Frazier <jack.frazier03@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "midp", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"

# Core ML dependencies
torch = "^2.1.0"
torchvision = "^0.16.0"
pytorch-lightning = "^2.1.0"

# Graph neural network libraries
torch-geometric = "^2.4.0"
torch-scatter = "^2.1.2"
torch-sparse = "^0.6.18"
torch-cluster = "^1.6.3"

# Protein-specific libraries
biopython = "^1.75"
biotite = "^0.38.0"
fair-esm = "^2.0.0"

# Scientific computing
numpy = "^1.24.3"
scipy = "^1.11.0"
pandas = "^2.1.0"
scikit-learn = "^1.3.0"
networkx = "^3.1"
mdtraj = "^1.9.9"
mdanalysis = "^2.6.0"

# Visualization
matplotlib = "^3.7.2"
seaborn = "^0.12.2"
plotly = "^5.17.0"
py3dmol = "^2.0.3"

# Cloud and deployment
boto3 = "^1.28.0"
awscli = "^1.29.0"
sagemaker = "^2.188.0"
redis = "^5.0.0"
celery = "^5.3.0"

# Performance optimization
numba = "^0.58.0"
memory-profiler = "^0.61.0"
tqdm = "^4.66.0"

# Data handling
h5py = "^3.9.0"
zarr = "^2.16.0"
dask = "^2023.10.0"
pyarrow = "^13.0.0"

# API and microservices
fastapi = "^0.104.0"
uvicorn = "^0.24.0"
pydantic = "^2.4.0"
httpx = "^0.25.0"

# Monitoring and logging
wandb = "^0.15.12"
tensorboard = "^2.14.0"
loguru = "^0.7.2"
prometheus-client = "^0.18.0"

# Configuration management
hydra-core = "^1.3.2"
omegaconf = "^2.3.0"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
pytest-mock = "^3.11.0"
ruff = "^0.5.3"
mypy = "^1.6.0"
pre-commit = "^3.5.0"
ipython = "^8.16.0"
jupyter = "^1.0.0"
jupyterlab = "^4.0.7"
nbqa = "^1.7.0"
sphinx = "^7.2.0"
sphinx-rtd-theme = "^1.3.0"

[tool.poetry.group.test.dependencies]
hypothesis = "^6.88.0"
faker = "^19.12.0"
factory-boy = "^3.3.0"
responses = "^0.24.0"
moto = "^4.2.0"

[tool.poetry.extras]
# Note: PyRosetta requires special installation - see documentation
# Also need to figure out an alternative or workaround for pydrug

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C90",  # mccabe complexity
    "TID",  # flake8-tidy-imports
    "RUF",  # ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]  # Use of assert detected

[tool.ruff.isort]
known-first-party = ["midp"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["idp_predictor"]
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.poetry.scripts]
midp-train = "midp.cli.train:main"
midp-predict = "midp.cli.predict:main"
midp-validate = "midp.cli.validate:main"
midp-deploy = "midp.cli.deploy:main"